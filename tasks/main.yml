---
# tasks file for jeffhung.mysql
# ----------------------------------------------------------------------------
#


- block:

  - name: Install mysql community repository.
    yum:
      name="http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm"
      state=present
    when: ansible_pkg_mgr == 'yum'

  - name: Install mysql packages (yum)
    yum: state=present name={{ item }}
    with_items:
      - mysql
      - mysql-server
      - openssl
      # below are required for Ansible to work
      - MySQL-python
      - libselinux-python
    when: ansible_pkg_mgr == 'yum'

  - name: Install mysql packages (apt)
    apt: state=present name={{ item }}
    with_items:
      - mysql-common
      - mysql-server
      - openssl
      # below are required for Ansible to work
      - python-mysqldb
      - python-selinux
    when: ansible_pkg_mgr == 'apt'

  - name: Default temporary pasword
    set_fact: temp_password=''

  - name: find temporary password
    shell: "awk  '/temporary password/ {a=$NF} END {print a}' /var/log/mysqld.log"
    register: find_password
    when: ansible_pkg_mgr == 'yum'
    changed_when: false

  - name: Set temporary pasword
    set_fact: temp_password={{ find_password.stdout }}
    when: ansible_pkg_mgr == 'yum'

  become: yes

# ----------------------------------------------------------------------------

- name: Start the mysql services and enable on boot
  service: state=started enabled=yes name={{ mysql_service_name[ansible_os_family] }}
  become: yes

# ----------------------------------------------------------------------------
#
- name: Try login mysql as root with temporary password password
  shell: mysql --connect-expired-password -u root -Nbe 'status;' 
  environment:
     MYSQL_PWD: "{{ temp_password }}"
  register: get_status
  ignore_errors: yes
  changed_when: false

- name: Has mysql already been secured.
  stat: 
    path=~/.my.cnf
  register: password_set

- name: Extract current password
  shell: "awk -F= '/password=/ {a=$NF} END {print a}' ~/.my.cnf"
  register: find_cnf_password
  when: password_set.stat.exists
  changed_when: false

- name: Get current password
  set_fact: temp_password={{ find_cnf_password.stdout }}
  when: password_set.stat.exists
  changed_when: false


- name: Initiate mysql securing process if password chage
  include: securing.yml
  when: temp_password != mysql_root_password

- name: include certificates
  include: certificates.yml

# ----------------------------------------------------------------------------

# Note: On debian the mysql user debian-sys-maint must exist!!
#       This user together with the credentials in /etc/mysql/debian.cnf are
#       used by the init scripts to stop the server as they would require
#       knowledge of the mysql root users password else.
#       (See: http://serverfault.com/a/9952)
- name: Ensure login mysql as debian-sys-maint would success
  mysql_variables: config_file=/etc/mysql/debian.cnf variable=version_comment
  register: mysql_version_comment
  when: ansible_os_family == 'Debian'
  # File /etc/mysql/debian.cnf is owned by root
  become: yes

# ----------------------------------------------------------------------------

- name: Create the databases
  mysql_db: name={{ item.name }} state=present
  with_items: "{{ mysql_databases }}"
  environment:
     MYSQL_PWD: "{{ temp_password }}"
  when: mysql_databases|lower() != 'none'

- name: Create the database users
  mysql_user:
    state:    present
    name:     "{{ item.name }}"
    password: "{{ item.pass | default('mysqluserpass') }}"
    priv:     "{{ item.priv | default('*.*:ALL') }}"
    host:     "{{ item.host | default('localhost') }}"
  with_items: "{{ mysql_users }}"
  when: mysql_users|lower() != 'none'

